const helper = require('./helper')

const globalConfig = require('../config/orgs.json')
const caUtil = require('./util/ca')

const setCAAdmin = (client, { COMPANY = 'delphi', orgName }, isTLS) => {
	const companyConfig = globalConfig[COMPANY]
	const orgsConfig = companyConfig.orgs
	const caConfig = orgsConfig[orgName].ca

	const caService = helper.getCaService(orgName, isTLS)
	//this admin is not generated by cryptogen
	const CAadminName = caConfig.admin.name
	const CAadminPass = caConfig.admin.pass

	const MSPID = orgsConfig[orgName].MSP.id
	return caUtil.enroll(caService, { enrollmentID: CAadminName, enrollmentSecret: CAadminPass }).
			then((result) => {
				return caUtil.user.build(helper.formatUsername(CAadminName, orgName), result, MSPID).then((user) => {
					return client.setUserContext(user, true)
				})
			})
}

exports.setCAAdmin = setCAAdmin